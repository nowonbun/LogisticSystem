DROP DATABASE logic;
CREATE DATABASE logic;
use logic;

CREATE TABLE TSN_User(
    EmailId VARCHAR(100) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Name NVARCHAR(255) NOT NULL,
    PhoneNumber VARCHAR(20) NOT NULL,
    CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	IsAdmin BOOLEAN DEFAULT FALSE NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY (EmailId)
);

CREATE TABLE TSN_Group(
	Idx  INT NOT NULL AUTO_INCREMENT,
	Name NVARCHAR(255) UNIQUE NOT NULL,
	IsDefault BOOLEAN DEFAULT FALSE NOT NULL,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY (Idx)
);

-- User : Group = n:n
CREATE TABLE MAP_USER_GROUP(
	EmailId VARCHAR(100) NOT NULL,
	GroupId INT NOT NULL,
	
	PRIMARY KEY (EmailId,GroupId),
	FOREIGN KEY (EmailId) REFERENCES TSN_User(EmailId),
	FOREIGN KEY (GroupId) REFERENCES TSN_Group(Idx)
);

CREATE TABLE MST_ViewRole(
	CODE CHAR(4) NOT NULL,
	NAME NVARCHAR(255) NOT NULL,
	IsActive BOOLEAN DEFAULT TRUE NOT NULL,
	
	PRIMARY KEY (CODE)
);

CREATE TABLE MST_ActionRole(
	CODE CHAR(4) NOT NULL,
	NAME NVARCHAR(255) NOT NULL,
	IsActive BOOLEAN DEFAULT TRUE NOT NULL,
	
	PRIMARY KEY (CODE)
);

-- If it have not map of role by view, that is all permission.
CREATE TABLE MAP_VIEW_ROLE_GROUP(
	ViewCode CHAR(4) NOT NULL,
	GroupId INT NOT NULL,
	
	PRIMARY KEY (ViewCode,GroupId),
	FOREIGN KEY (ViewCode) REFERENCES MST_ViewRole(CODE),
	FOREIGN KEY (GroupId) REFERENCES TSN_Group(Idx)
);

-- If it have not map of role by view, that is all permission.
CREATE TABLE MAP_VIEW_ROLE_USER(
	ViewCode CHAR(4) NOT NULL,
	EmailId VARCHAR(100) NOT NULL,
	
	PRIMARY KEY (ViewCode,EmailId),
	FOREIGN KEY (ViewCode) REFERENCES MST_ViewRole(CODE),
	FOREIGN KEY (EmailId) REFERENCES TSN_User(EmailId)
);

-- If it have not map of role by action, that is all permission.
CREATE TABLE MAP_ACTION_ROLE_GROUP(
	RoleCode CHAR(4) NOT NULL,
	GroupId INT NOT NULL,
	
	PRIMARY KEY (RoleCode,GroupId),
	FOREIGN KEY (RoleCode) REFERENCES MST_ActionRole(CODE),
	FOREIGN KEY (GroupId) REFERENCES TSN_Group(Idx)
);

-- If it have not map of role by action, that is all permission.
CREATE TABLE MAP_ACTION_ROLE_USER(
	RoleCode CHAR(4) NOT NULL,
	EmailId VARCHAR(100) NOT NULL,
	
	PRIMARY KEY (RoleCode,EmailId),
	FOREIGN KEY (RoleCode) REFERENCES MST_ActionRole(CODE),
	FOREIGN KEY (EmailId) REFERENCES TSN_User(EmailId)
);

-- Permission map condition is next:
-- Group was had in Map_Group, User in its group was had in Map_User -> all user in group can access. it has not mean.
-- Group was not had in Map_Group, User in its group was had in Map_User -> only user can access the rule. the group can not be.
-- example SQL;
-- SELECT role.CODE,user.EmailId  
--		FROM MST_ViewRole role INNER JOIN MAP_VIEW_ROLE_GROUP map ON role.CODE = map.ViewCode
--							   INNER JOIN MAP_USER_GROUP groupmap ON map.GroupId = groupmap.GroupId
--							   INNER JOIN TSN_User user ON groupmap.GroupId = user.EmailId
-- UNION
-- SELECT role.CODE,user.EmailId 
--		FROM MST_ViewRole role INNER JOIN MAP_VIEW_ROLE_USER map ON role.CODE = map.ViewCode
--							   INNER JOIN TSN_User user ON map.EmailId = user.EmailId;



CREATE TABLE MST_CompanyType(
	CODE CHAR(2) NOT NULL,
	NAME NVARCHAR(255) NOT NULL,
	IsActive BOOLEAN DEFAULT TRUE NOT NULL,
	
	PRIMARY KEY (CODE)
);
INSERT INTO MST_CompanyType (CODE,NAME) VALUES('01',N'発注社');
INSERT INTO MST_CompanyType (CODE,NAME) VALUES('02',N'受注社');
INSERT INTO MST_CompanyType (CODE,NAME) VALUES('03',N'流通社');
INSERT INTO MST_CompanyType (CODE,NAME) VALUES('04',N'御客');
INSERT INTO MST_CompanyType (CODE,NAME) VALUES('05',N'生産社');
INSERT INTO MST_CompanyType (CODE,NAME) VALUES('06',N'工場');
INSERT INTO MST_CompanyType (CODE,NAME) VALUES('07',N'OEM');


CREATE TABLE TSN_Company(
	Idx INT NOT NULL AUTO_INCREMENT,
	CompanyType CHAR(2) NOT NULL,
	CompanyName NVARCHAR(255) NOT NULL,
    CompanyAddress NVARCHAR(255) NOT NULL,
    CompanyZIPCode1 CHAR(3) NOT NULL,
	CompanyZIPCode2 CHAR(4) NOT NULL,
    CompanySecurityNumber VARCHAR(50) NOT NULL,
	CompanyPhoneNumber VARCHAR(20) NOT NULL,
    CompanyFax VARCHAR(20),
    CompanyEMail VARCHAR(100) NOT NULL,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY (Idx),
	FOREIGN KEY (CompanyType) REFERENCES MST_CompanyType (Code)
);

CREATE TABLE TSN_Account(
	Idx INT NOT NULL AUTO_INCREMENT,
	CompanyId INT NOT NULL,
	AccountNumber VARCHAR(100) NOT NULL,
    AccountBank NVARCHAR(100) NOT NULL,
    AccountbankCode VARCHAR(20) NOT NULL,
    AccountbankCodename NVARCHAR(100) NOT NULL,
    AccountOwnername NVARCHAR(100) NOT NULL,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY (Idx),
	FOREIGN KEY (CompanyId) REFERENCES TSN_Company (Idx)
);

CREATE TABLE MST_EmployeeType(
	CODE CHAR(2) NOT NULL,
	NAME NVARCHAR(255) NOT NULL,
	IsActive BOOLEAN DEFAULT TRUE NOT NULL,
	
	PRIMARY KEY (CODE)
);

INSERT INTO MST_EmployeeType (CODE, NAME) VALUES('01', N'取締役');
INSERT INTO MST_EmployeeType (CODE, NAME) VALUES('02', N'社長');
INSERT INTO MST_EmployeeType (CODE, NAME) VALUES('03', N'営業部');
INSERT INTO MST_EmployeeType (CODE, NAME) VALUES('04', N'社員');
INSERT INTO MST_EmployeeType (CODE, NAME) VALUES('05', N'担当者');

CREATE TABLE TSN_Employee(
	Idx INT NOT NULL AUTO_INCREMENT,
	CompanyId INT NOT NULL,
	EmployeeType CHAR(2) NOT NULL,
	Name NVARCHAR(255) NOT NULL,
	PhoneNumber VARCHAR(20) NOT NULL,
	Email VARCHAR(100) NOT NULL,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY (Idx),
	FOREIGN KEY (CompanyId) REFERENCES TSN_Company (Idx),
	FOREIGN KEY (EmployeeType) REFERENCES MST_EmployeeType (CODE)
);

CREATE TABLE MST_OrderType(
	CODE CHAR(2) NOT NULL,
	NAME NVARCHAR(255) NOT NULL,
	IsActive BOOLEAN DEFAULT TRUE NOT NULL,
	
	PRIMARY KEY (CODE)
);

INSERT INTO MST_OrderType (CODE, NAME) VALUES('01', N'発注');
INSERT INTO MST_OrderType (CODE, NAME) VALUES('02', N'受注');
INSERT INTO MST_OrderType (CODE, NAME) VALUES('03', N'生産');
INSERT INTO MST_OrderType (CODE, NAME) VALUES('99', N'その他');

CREATE TABLE MST_PayType(
	CODE CHAR(2) NOT NULL,
	NAME NVARCHAR(255) NOT NULL,
	IsActive BOOLEAN DEFAULT TRUE NOT NULL,
	
	PRIMARY KEY (CODE)
);

INSERT INTO MST_PayType (CODE, NAME) VALUES('01', N'現金');
INSERT INTO MST_PayType (CODE, NAME) VALUES('02', N'クレジットカード');
INSERT INTO MST_PayType (CODE, NAME) VALUES('03', N'振込');
INSERT INTO MST_PayType (CODE, NAME) VALUES('99', N'その他');

CREATE TABLE TSN_OrderTable(
	Idx INT NOT NULL AUTO_INCREMENT,
	OrderType CHAR(2) NOT NULL,
	OrderOther NVARCHAR(255) NULL,
	CompanyId INT NOT NULL,
	OrderPrice DECIMAL NOT NULL,
	OrderSaveExpectedDate DATETIME NOT NULL,
	OrderSavePlace NVARCHAR(255) NOT NULL,
	OrderDate DATETIME NOT NULL,
	PayDate DATETIME,
	PayMoney DECIMAL,
	PayType CHAR(2),
	PayOther NVARCHAR(255),
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY(Idx),
	FOREIGN KEY (OrderType) REFERENCES MST_OrderType (CODE),
	FOREIGN KEY (CompanyId) REFERENCES TSN_Company (Idx),
	FOREIGN KEY (PayType) REFERENCES MST_PayType (CODE)
);

CREATE TABLE TSN_ProductType(
	Idx INT NOT NULL AUTO_INCREMENT,
	ProductTypeName NVARCHAR(255) NOT NULL,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) NOT NULL NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,

	PRIMARY KEY(idx)
);

CREATE TABLE TSN_Product(
	Idx INT NOT NULL AUTO_INCREMENT,
	ProductName NVARCHAR(255) NOT NULL,
	ProductType INT NOT NULL,
    ProductSpec NVARCHAR(255),
    ProductAcquirer NVARCHAR(255),
    ProductManufacturer NVARCHAR(255),
    ProductCost DECIMAL,
    ProductCostTax DECIMAL,
    ProductFactoryPrice DECIMAL,
    ProductFactoryPriceTax DECIMAL,
    ProductRetailPrice DECIMAL,
    ProductRetailPriceTax DECIMAL,
    ProductPrice DECIMAL,
    ProductPriceTax DECIMAL,
	Price DECIMAL NOT NULL,
	Tax DECIMAL NOT NULL,
    BarCode VARCHAR(255),
    QrCode VARCHAR(255),
    Other NVARCHAR(255),
    CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY(idx),
	FOREIGN KEY (ProductType) REFERENCES TSN_ProductType (Idx)
);

CREATE TABLE TSN_OrderTableProduct(
	Idx INT NOT NULL AUTO_INCREMENT,
	OrderId INT NOT NULL,
	Sequence INT NOT NULL,
    ProductId INT NOT NULL,
    ProductAmount DECIMAL NOT NULL,
    ProductTotalPrice DECIMAL NOT NULL,
    ProductMoney DECIMAL NOT NULL,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY(Idx),
	FOREIGN KEY (OrderId) REFERENCES TSN_OrderTable (Idx),
	FOREIGN KEY (ProductId) REFERENCES TSN_Product (Idx)
);

CREATE TABLE MST_BILL_STATUS(
	CODE CHAR(2) NOT NULL,
	NAME NVARCHAR(255) NOT NULL,
	IsActive BOOLEAN DEFAULT TRUE NOT NULL,
	
	PRIMARY KEY(CODE)
);

-- Insert into MST_Bill
INSERT INTO MST_BILL_STATUS (CODE, NAME) VALUES('01', N' 請求申請');
INSERT INTO MST_BILL_STATUS (CODE, NAME) VALUES('02', N' 請求中');
INSERT INTO MST_BILL_STATUS (CODE, NAME) VALUES('03', N' 請求済');
INSERT INTO MST_BILL_STATUS (CODE, NAME) VALUES('04', N' 未支払');
INSERT INTO MST_BILL_STATUS (CODE, NAME) VALUES('05', N' 支払済');

CREATE TABLE MST_INOUT_TYPE(
	CODE CHAR(1) NOT NULL,
	NAME NVARCHAR(255) NOT NULL,
	IsActive BOOLEAN DEFAULT TRUE NOT NULL,
	
	PRIMARY KEY(CODE)
);

INSERT INTO MST_INOUT_TYPE (CODE, NAME) VALUES('0', N'IN');
INSERT INTO MST_INOUT_TYPE (CODE, NAME) VALUES('1', N'OUT');

CREATE TABLE MST_BILL_TYPE(
	CODE CHAR(1) NOT NULL,
	MST_INOUT_TYPE CHAR(1) NOT NULL,
	NAME NVARCHAR(255) NOT NULL,
	IsActive BOOLEAN DEFAULT TRUE NOT NULL,
	
	PRIMARY KEY(CODE),
	FOREIGN KEY (MST_INOUT_TYPE) REFERENCES MST_INOUT_TYPE (CODE)
);

-- Insert into MST_Bill
INSERT INTO MST_BILL_TYPE (CODE, MST_INOUT_TYPE, NAME) VALUES('A', '0' ,N'見積');
INSERT INTO MST_BILL_TYPE (CODE, MST_INOUT_TYPE, NAME) VALUES('B', '1' ,N'見積');
INSERT INTO MST_BILL_TYPE (CODE, MST_INOUT_TYPE, NAME) VALUES('C', '0', N'領収');
INSERT INTO MST_BILL_TYPE (CODE, MST_INOUT_TYPE, NAME) VALUES('D', '1', N'領収');
INSERT INTO MST_BILL_TYPE (CODE, MST_INOUT_TYPE, NAME) VALUES('E', '0', N'請求');
INSERT INTO MST_BILL_TYPE (CODE, MST_INOUT_TYPE, NAME) VALUES('F', '1', N'請求');

CREATE TABLE TSN_Bill(
	Idx INT NOT NULL AUTO_INCREMENT,
	OrderCompanyId INT NOT NULL,
	BillStatus CHAR(2) NOT NULL,
	BillType CHAR(1) NOT NULL,
	BillDate DATETIME,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY(Idx),
	FOREIGN KEY (OrderCompanyId) REFERENCES TSN_Company (Idx),
	FOREIGN KEY (BillStatus) REFERENCES MST_BILL_STATUS (CODE),
	FOREIGN KEY (BillType) REFERENCES MST_BILL_TYPE (CODE)
);

CREATE TABLE TSN_Bill_SUB(
	Idx INT NOT NULL AUTO_INCREMENT,
	Parent INT NOT NULL,
	ProductId INT NOT NULL,
	Money DECIMAL,
	Tax DECIMAL,
	Total DECIMAL,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY(Idx),
	FOREIGN KEY (Parent) REFERENCES TSN_Bill (Idx),
	FOREIGN KEY (ProductId) REFERENCES TSN_Product (Idx)
);

CREATE TABLE TSN_Cargo(
	Idx INT NOT NULL AUTO_INCREMENT,
	ProductId INT NOT NULL,
	AMOUNT DECIMAL,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY(Idx),
	FOREIGN KEY (ProductId) REFERENCES TSN_Product (Idx)
);

CREATE TABLE MST_CARGP_ACTION_TYPE(
	CODE CHAR(1) NOT NULL,
	NAME NVARCHAR(255) NOT NULL,
	IsActive BOOLEAN DEFAULT TRUE NOT NULL,
	
	PRIMARY KEY(CODE)
);

INSERT INTO MST_CARGP_ACTION_TYPE (CODE, NAME) VALUES('A', N'入庫');
INSERT INTO MST_CARGP_ACTION_TYPE (CODE, NAME) VALUES('B', N'出庫');

CREATE TABLE TSN_Cargo_History(
	Idx INT NOT NULL AUTO_INCREMENT,
	CARGO_IDX INT NOT NULL,
	ACTION_TYPE CHAR(1) NOT NULL,
	AMOUNT DECIMAL,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY(Idx),
	FOREIGN KEY (ACTION_TYPE) REFERENCES MST_CARGP_ACTION_TYPE (CODE),
	FOREIGN KEY (CARGO_IDX) REFERENCES TSN_Cargo (Idx)
);

CREATE TABLE TSN_Document(
	Idx INT NOT NULL AUTO_INCREMENT,
	DOCUMENTLINK NVARCHAR(255) NOT NULL,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY(Idx)
);

CREATE TABLE LOOKUP(
	Idx INT NOT NULL AUTO_INCREMENT,
	Lookup_Key NVARCHAR(100) NOT NULL,
	Lookup_Value NVARCHAR(100) NOT NULL,
	CreatedDate DATETIME DEFAULT NOW() NOT NULL,
	Creater VARCHAR(100) DEFAULT '' NOT NULL,
	LastUpdatedDate DATETIME DEFAULT NOW() NOT NULL,
	LastUpdater VARCHAR(100) DEFAULT '' NOT NULL,
	IsDeleted BOOLEAN DEFAULT FALSE NOT NULL,
	
	PRIMARY KEY(Idx)
)
